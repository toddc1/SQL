#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

Utilized -- WHERE length(order_id) = 6 AND order_id <> 'Order ID'; to clean up any data as well

-- How many order were placed in January? 

SELECT COUNT(orderID) FROM Jansales;
WHERE length(orderID) = 6 AND orderID <> 'Order ID';

--How many of those orders were for an iPhone?

SELECT COUNT(orderID), product
FROM Jansales
WHERE product='iPhone' AND length(orderID) = 6 AND orderID <> 'Order ID';

-- Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT acctnum
FROM FebSales
JOIN customers
ON febsales.orderID=customers.order_id
WHERE length(orderid) = 6 AND order_id <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?

SELECT product, MIN(price), orderID
FROM JanSales
WHERE length(orderID) = 6 AND order_id <> 'Order ID';

or

SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

-- What is the total revenue of each product sold in January?

SELECT SUM(quantity)*price AS revenue, product
FROM JanSales
GROUP BY product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT SUM(quantity), Product, SUM(quantity)*price AS revenue
FROM FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(acctnum), AVG(quantity*price)
FROM FebSales 
LEFT JOIN customers
ON febsales.orderID=customers.order_id
WHERE Quantity > 2 AND length(orderID) = 6 AND orderID <> 'Order ID' 
;

-- WHERE length(order_id) = 6 AND order_id <> 'Order ID';
